server.port=8082
spring.application.name=payments-service

app.gateway.base-url-for-service=http://localhost:8080

spring.datasource.url=jdbc:postgresql://localhost:5432/microservices_db
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=payments-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#1spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.properties.spring.json.value.default.type=com.example.event.OrderCreatedEvent
spring.kafka.properties.spring.json.trusted.packages=*
spring.kafka.properties.spring.json.use.type.headers=false

app.kafka.order-created-topic=order.created
app.kafka.payment-processed-topic=payment.processed